definitions:
  domain.Odontologo:
    properties:
      apellido:
        type: string
      id:
        type: integer
      matricula:
        type: string
      nombre:
        type: string
    required:
    - apellido
    - matricula
    - nombre
    type: object
  domain.Paciente:
    properties:
      apellido:
        type: string
      dni:
        type: string
      domicilio:
        type: string
      fecha_alta:
        type: string
      id:
        type: integer
      nombre:
        type: string
    required:
    - apellido
    - dni
    - domicilio
    - fecha_alta
    - nombre
    type: object
  domain.Turno:
    properties:
      descripcion:
        type: string
      fecha:
        type: string
      hora:
        type: string
      id:
        type: integer
      id_odontologo:
        type: integer
      id_paciente:
        type: integer
    required:
    - descripcion
    - fecha
    - hora
    - id_odontologo
    - id_paciente
    type: object
  web.errorResponse:
    properties:
      code:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  web.response:
    properties:
      data: {}
    type: object
info:
  contact:
    name: API Support
    url: https://developers.ctd.com.ar/support
  description: Esta API permite realizar operaciones CRUD sobre la base de datos del
    consultorio, que contiene registros de odontólogos, pacientes y turnos
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developers.ctd.com.ar/es_ar/terminos-y-condiciones
  title: API consultorio odontológico
  version: "1.0"
paths:
  /odontologos:
    post:
      description: Crea un nuevo odontólogo
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Odontologo
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.Odontologo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: POST odontologo
      tags:
      - domain.Odontologo
  /odontologos/:id:
    delete:
      description: Elimina un odontólogo por su ID
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Odontologo Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: DELETE odontologo by ID
      tags:
      - domain.Odontologo
    get:
      description: Obtiene un odontólogo por su ID
      parameters:
      - description: Odontologo Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: GET odontologo by ID
      tags:
      - domain.Odontologo
    patch:
      description: Actualizar parcialmente un odontólogo por su ID
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Odontologo
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.Odontologo'
      - description: Odontologo Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: PATCH odontologo by ID
      tags:
      - domain.Odontologo
    put:
      description: Actualiza un odontologo por su ID
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Odontologo
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.Odontologo'
      - description: Odontologo Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: PUT odontologo by ID
      tags:
      - domain.Odontologo
  /pacientes:
    post:
      description: Crea un nuevo paciente
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Paciente
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.Paciente'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: POST paciente
      tags:
      - domain.Paciente
  /pacientes/:id:
    delete:
      description: Elimina un paciente por su ID
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Odontologo Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: DELETE paciente by ID
      tags:
      - domain.Paciente
    get:
      description: Obtiene un paciente por su ID
      parameters:
      - description: Paciente Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: GET paciente by ID
      tags:
      - domain.Paciente
    patch:
      description: Actualizar parcialmente un paciente por su ID
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Paciente
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.Paciente'
      - description: Paciente Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: PATCH paciente by ID
      tags:
      - domain.Paciente
    put:
      description: Actualiza un paciente por su ID
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Paciente
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.Paciente'
      - description: Odontologo Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: PUT paciente by ID
      tags:
      - domain.Paciente
  /turnos:
    get:
      description: Obtiene una lista de turnos por DNI
      parameters:
      - description: Turno Dni
        in: query
        name: dni
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: GET turnos by DNI
      tags:
      - domain.Turno
    post:
      description: Crea un nuevo turno con el ID del paciente y el ID del odontólogo
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Turno
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.Turno'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: POST turno
      tags:
      - domain.Turno
  /turnos/:id:
    delete:
      description: Elimina un turno por su ID
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Turno Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: DELETE turno by ID
      tags:
      - domain.Turno
    get:
      description: Obtiene un turno por su ID
      parameters:
      - description: Turno Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: GET turno by ID
      tags:
      - domain.Turno
    patch:
      description: Actualizar parcialmente un turno por su ID
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Turno
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.Turno'
      - description: Turno Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: PATCH turno by ID
      tags:
      - domain.Turno
    put:
      description: Actualiza un turno por su ID
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Turno
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.Turno'
      - description: Turno Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: PUT turno by ID
      tags:
      - domain.Turno
swagger: "2.0"
